---
- name: Remove excessive ubuntu software
  apt:
    name: "{{ packages }}"
    state: absent
    purge: true
  become: true
  vars:
    packages:
      - libreoffice*

#- name: Cleaning up launcher icons
#  command: gsettings set org.gnome.shell favorite-apps "['firefox.desktop', 'org.gnome.Nautilus.desktop', 'org.gnome.Terminal.desktop']"
#  become: false

- name: Give user access to the serial port
  user:
    name: "{{ ansible_user }}"
    groups: dialout
    append: yes
  become: true

#- name: Rules for realsense download
#  command: wget -O /etc/udev/rules.d/99-realsense-libusb.rules https://raw.githubusercontent.com/IntelRealSense/librealsense/master/config/99-realsense-libusb.rules
#  become: true
#  
#- name: Rules for realsense reload
#  command: udevadm control --reload-rules
#  become: true
#  
#- name: Rules for realsense trigger
#  command: udevadm trigger
#  become: true
  
- name: Install system essentials for the robot
  apt:
    name: "{{ packages }}"
  become: true
  vars:
    packages:
      - openssh-server
      - screen

#Service setup
- name: Set up a systemd service for Robotont
  template:
    src: robotont.service.j2
    dest: /lib/systemd/system/robotont.service
    owner: root
    group: root
    mode: '0644'
  become: true

- name: Enable and start the service
  service:
    name: robotont.service
    state: started
    enabled: yes
  become: true
    
- name: Reconfiguring hostname 
  command: hostnamectl set-hostname robotont-{{ id }}
  become: true
  
- name: Configuring hostname in /etc/hosts
  lineinfile:
    path: /etc/hosts
    regexp: '^127.0.1.1'
    line: 127.0.1.1   robotont-{{ id }}
  become: true
    
- name: Configuring /etc/netplan/01-network-manager-all.yaml
  template:
    src: robot_netplan.j2
    dest: /etc/netplan/01-network-manager-all.yaml
    owner: root
    group: root
    mode: '0644'
  become: true

- name: Apply netplan
  command: netplan apply
  become: true

  #- name: Apply connection
  #  command: nmcli connection up netplan-wlp58s0-robotont-{{ id }}
  #  become: true

- name: Unconditionally reboot the machine with all defaults
  reboot:
  become: yes
