---
- name: Remove excessive software
  apt:
    name: "{{ packages }}"
    state: absent
    purge: true
  become: true
  vars:
    packages:
      - libreoffice*

- name: Give user access to the serial port
  user:
    name: "{{ ansible_user }}"
    groups: dialout
    append: yes
  become: true

- name: Rules for realsense download
  command: wget -O /etc/udev/rules.d/99-realsense-libusb.rules https://raw.githubusercontent.com/IntelRealSense/librealsense/master/config/99-realsense-libusb.rules
  become: true
  
- name: Rules for realsense reload
  command: udevadm control --reload-rules
  become: true
  
- name: Rules for realsense reigger
  command: udevadm trigger
  become: true
  
- name: Install system essentials for the robot
  apt:
    name: "{{ packages }}"
  become: true
  vars:
    packages:
      - openssh-server
      - screen
      - ros-noetic-realsense2-camera
      - ros-noetic-librealsense2
      - ros-noetic-rtabmap
      - ros-noetic-rtabmap-ros

- name: Cleaning up launcher icons
  command: gsettings set org.gnome.shell favorite-apps "['firefox.desktop', 'org.gnome.Nautilus.desktop', 'org.gnome.Terminal.desktop']"
  become: false
  
- name: Add keys for Node.js 19.x
  apt_key:
    url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
    state: present
  become: true

- name: Add nodesource repository for Node.js 19.x
  become: true
  apt_repository:
    repo: deb https://deb.nodesource.com/node_19.x {{ ansible_distribution_release }} main
    state: present

- name: Update apt cache
  apt:
    update_cache: yes
  become: true
  

- name: Install required packages
  become: true
  apt:
    name:
      - build-essential
      - cmake
      - libjson-c-dev
      - libwebsockets-dev
      - nodejs
      - ros-noetic-rosbridge-server
      - ros-noetic-tf2-web-republisher
      - ros-noetic-web-video-server
    # state: latest
  become: true

- name: Install npm version 9.5.0
  npm:
    name: npm@9.5.0
    global: yes
    state: present
  become: true

- name: Install n
  npm:
    name: n
    global: yes
    state: present
  become: true

- name: Install Node.js with n
  shell: sudo n 19.7.0
  become: true

- name: Install dependencies for ttyd
  apt:
    name:
      - libjson-c-dev
      - libwebsockets-dev
    state: latest
  
- name: Install ttyd
  shell: |
    git clone https://github.com/tsl0922/ttyd.git
    cd ttyd && mkdir build && cd build
    cmake ..
    make && sudo make install
  become: true

- name: Build Catkin workspace for robotont
  shell: bash -ic 'catkin build'
  args: 
    chdir: /home/{{ ansible_user }}/catkin_ws 
  become_user: "{{ ansible_user }}"
  tags: untested

- name: Add catkin_ws to bashrc
  lineinfile:
    path: /home/{{ ansible_user }}/.bashrc
    line: source /home/{{ansible_user}}/catkin_ws/devel/setup.bash
  become_user: "{{ ansible_user }}"
  tags:
    - untested
#Service setup
- name: Set up a systemd service for Robotont
  template:
    src: robotont.service.j2
    dest: /lib/systemd/system/robotont.service
    owner: root
    group: root
    mode: '0644'
  become: true

- name: Enable and start the service
  service:
    name: robotont.service
    state: started
    enabled: yes
  become: true
    
- name: Reconfiguring hostname 
  command: hostnamectl set-hostname robotont-{{ id }}
  become: true
  
- name: Configuring hostname in /etc/hosts
  lineinfile:
    path: /etc/hosts
    regexp: '^127.0.1.1'
    line: 127.0.1.1   robotont-{{ id }}
  become: true
    
- name: Configuring /etc/netplan/01-network-manager-all.yaml
  template:
    src: Testik_netplan.j2
    dest: /etc/netplan/01-network-manager-all.yaml
    owner: root
    group: root
    mode: '0644'
  become: true

- name: Apply netplan
  command: netplan apply
  become: true


- name: start wifi
  command: ip link set {{ wifi_interface }} up
  become: true


- name: Apply connection
  command: nmcli connection up netplan-{{ wifi_interface }}-robotont-{{ id }}
  become: true


- name: Disable Sleep and Hibernate
  command: systemctl unmask sleep.target suspend.target hibernate.target hybrid-sleep.target
  become: true

- name: Unconditionally reboot the machine with all defaults
  reboot:
  become: true

